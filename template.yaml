AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  blog_sam_backend

  Sample SAM Template for blog_sam_backend

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    MemorySize: 128
    Tracing: Active
    Environment:
      Variables:
        TABLE_NAME: Blogs
        REGION: us-east-1
  Api:
    TracingEnabled: true

Resources:
  CreateBlogFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/create_blog/
      Handler: app.lambda_handler
      Runtime: python3.9
      Events:
        CreateBlog:
          Type: Api
          Properties:
            Path: /blogs
            Method: post
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BlogsTable
  ListBlogsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/list_blogs/
      Handler: app.lambda_handler
      Runtime: python3.9
      Events:
        ListBlogs:
          Type: Api
          Properties:
            Path: /blogs/
            Method: get
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BlogsTable
  GetBlogFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/get_blog/
      Handler: app.lambda_handler
      Runtime: python3.9
      Events:
        GetBlog:
          Type: Api
          Properties:
            Path: /blogs/{id}
            Method: get
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BlogsTable
  UpdateBlogFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/update_blog/
      Handler: app.lambda_handler
      Runtime: python3.9
      Events:
        UpdateBlog:
          Type: Api
          Properties:
            Path: /blogs/{id}
            Method: put
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BlogsTable
  DeleteBlogFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/delete_blog/
      Handler: app.lambda_handler
      Runtime: python3.9
      Events:
        DeleteBlog:
          Type: Api
          Properties:
            Path: /blogs/{id}
            Method: delete
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BlogsTable
  BlogsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: "Blogs"
      AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: "1"
        WriteCapacityUnits: "1"


  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Join:
        - ''
        - - ApplicationInsights-SAM-
          - Ref: AWS::StackName
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Fn::Join:
        - ''
        - - ApplicationInsights-SAM-
          - Ref: AWS::StackName
      AutoConfigurationEnabled: 'true'
    DependsOn: ApplicationResourceGroup
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  BlogsTable:
    Description: "DynamoDB Table"
    Value: !Ref BlogsTable

  BlogsApi:
    Description: API Gateway endpoint URL for Blogs function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
